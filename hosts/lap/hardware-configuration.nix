# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  # globals,
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  # home-manager.users.${globals.username}.monitors = [
  #   {
  #     name = "eDP-1";
  #     width = 1929;
  #     height = 1200;
  #     x = 0;
  #     workspace = "1";
  #     primary = true;
  #   }
  # ];

  boot = {
    # Bootloader.
    loader = {
      systemd-boot.enable = true;
      efi.canTouchEfiVariables = true;
      systemd-boot.configurationLimit = 100;
    };
    initrd = {
      availableKernelModules = ["nvme" "xhci_pci" "uas" "sd_mod"];
      kernelModules = [];
      luks.devices = {
        "luks-rpool-nvme-Samsung_SSD_990_PRO_2TB_S7DNNU0X417249D-part2".device = "/dev/disk/by-id/nvme-Samsung_SSD_990_PRO_2TB_S7DNNU0X417249D-part2";
      };
    };
    kernelModules = ["kvm-amd"];
    extraModulePackages = [];
    # support for building nix packages for rp4
    binfmt.emulatedSystems = ["aarch64-linux"];
  };

  fileSystems."/" = {
    device = "rpool/root";
    fsType = "zfs";
  };

  fileSystems."/home" = {
    device = "rpool/home";
    fsType = "zfs";
  };

  fileSystems."/nix" = {
    device = "rpool/nix";
    fsType = "zfs";
  };

  fileSystems."/var" = {
    device = "rpool/var";
    fsType = "zfs";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/9152-FBB4";
    fsType = "vfat";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/bd1a51f1-5159-4d0a-a128-1d22211c16ff";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
